{"version":3,"sources":["component/Header.tsx","component/Movie.tsx","component/Search.tsx","component/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","props","className","text","Movie","movie","poster","Poster","Title","width","alt","src","href","imdbID","Year","Search","useState","searchData","setSearchData","value","onChange","e","target","type","onClick","preventDefault","search","App","loading","setLoading","movies","setMovies","errorMessage","setErrorMessage","useEffect","fetch","then","response","json","jsonResponse","Response","Error","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAMe,SAASA,EAAOC,GAC7B,OACE,wBAAQC,UAAU,aAAlB,SACE,6BAAKD,EAAME,SCOF,SAASC,EAAMH,GAAe,IACnCI,EAAUJ,EAAVI,MACFC,EAA0B,QAAjBD,EAAME,OAfrB,qGAeoEF,EAAME,OAE1E,OACE,sBAAKL,UAAU,QAAf,UACE,6BAAKG,EAAMG,QACX,8BACE,qBACEC,MAAM,MACNC,IAAG,4BAAuBL,EAAMG,OAChCG,IAAKL,MAGT,8BACE,mBAAGM,KAAI,sDAAiDP,EAAMQ,QAA9D,mBADF,SAGE,mBAAGD,KAAI,qCAAgCP,EAAMQ,QAA7C,SAAwDR,EAAMQ,YAEhE,kCAAKR,EAAMS,KAAX,UC7BS,SAASC,EAAOd,GAAkB,IAAD,EACVe,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAa9C,OACE,uBAAMhB,UAAU,SAAhB,UACE,uBACEiB,MAAOF,EACPG,SAd2B,SAACC,GAChCH,EAAcG,EAAEC,OAAOH,QAcnBI,KAAK,SAEP,uBAAOC,QAbgB,SAACH,GAC1BA,EAAEI,iBACFxB,EAAMyB,OAAOT,GACbC,EAAc,KAUwBK,KAAK,SAASJ,MAAM,cClB/C,SAASQ,IAAO,IAAD,EACEX,oBAAS,GADX,mBACrBY,EADqB,KACZC,EADY,OAEAb,mBAAS,IAFT,mBAErBc,EAFqB,KAEbC,EAFa,OAGYf,mBAAS,MAHrB,mBAGrBgB,EAHqB,KAGPC,EAHO,KAK5BC,qBAAU,WACRC,MARkB,kDASfC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJR,EAAUQ,EAAaxB,QACvBc,GAAW,QAEd,IAgBH,OACE,sBAAK3B,UAAU,MAAf,UACE,cAACF,EAAD,CAAQG,KAAK,WACb,cAACY,EAAD,CAAQW,OAjBG,SAACT,GACdY,GAAW,GACXI,EAAgB,MAEhBE,MAAM,8BAAD,OAA+BlB,EAA/B,qBACFmB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACsB,SAA1BA,EAAaC,SACbT,EAAUQ,EAAaxB,QACvBkB,EAAgBM,EAAaE,OAC7BZ,GAAW,SAQb,mBAAG3B,UAAU,YAAb,mDACA,qBAAKA,UAAU,SAAf,SACG0B,IAAYI,EACZ,8CACIA,EACH,qBAAK9B,UAAU,eAAf,SAA+B8B,IAE/BF,EAAOY,KAAI,SAACrC,EAAkBsC,GAAnB,OACT,cAACvC,EAAD,CAAuCC,MAAOA,GAA9C,UAAesC,EAAf,YAAwBtC,EAAMG,gBC9C1C,IAYeoC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8c07594e.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props{\n  text: string\n}\n\nexport default function Header(props: Props) {\n  return (\n    <header className=\"App-header\">\n      <h2>{props.text}</h2>\n    </header>\n  );\n};","import React from 'react';\n\nconst DEFAULT_PLACEHOLDER_IMAGE =\n  \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\n\nexport interface MovieData {\n  Title: string;\n  Poster: string;\n  imdbID: string;\n  Year: string;\n}\n\ntype Props = {\n  movie: MovieData;\n}\n\nexport default function Movie(props: Props) {\n  const { movie } = props;\n  const poster = movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : movie.Poster;\n\n  return (\n    <div className=\"movie\">\n      <h2>{movie.Title}</h2>\n      <div>\n        <img\n          width=\"200\"\n          alt={`The movie titled: ${movie.Title}`}\n          src={poster}\n        />\n      </div>\n      <p>\n        <a href={`https://rarbgmirror.com/torrents.php?search=${movie.imdbID}`}>RARBG</a>\n        &emsp;\n        <a href={`https://www.imdb.com/title/${movie.imdbID}`}>{movie.imdbID}</a>\n      </p>\n      <p>({movie.Year})</p>\n    </div>\n  );\n}","import React, { useState } from 'react';\n\ninterface SearchFn {\n  search(data: string): void\n}\n\nexport default function Search(props: SearchFn) {\n  const [searchData, setSearchData] = useState('');\n\n  const handleSearchInputChanges = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchData(e.target.value);\n  };\n\n  const callSearchFunction = (e: React.MouseEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    props.search(searchData);\n    setSearchData('');\n  };\n\n  return (\n    <form className=\"search\">\n      <input\n        value={searchData}\n        onChange={handleSearchInputChanges}\n        type=\"text\"\n      />\n      <input onClick={callSearchFunction} type=\"submit\" value=\"SEARCH\" />\n    </form>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport '../App.css';\nimport Header from './Header';\nimport Movie, { MovieData } from './Movie';\nimport Search from './Search';\n\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\"\n\nexport default function App() {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    fetch(MOVIE_API_URL)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        setMovies(jsonResponse.Search);\n        setLoading(false);\n      });\n  }, []);\n\n  const search = (searchData: string) => {\n    setLoading(true);\n    setErrorMessage(null);\n\n    fetch(`https://www.omdbapi.com/?s=${searchData}&apikey=4a3b711b`)\n      .then(response => response.json())\n      .then(jsonResponse => {\n        jsonResponse.Response === 'True' ? \n        setMovies(jsonResponse.Search) : \n        setErrorMessage(jsonResponse.Error);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <Header text=\"HOOKED\" />\n      <Search search={search} />\n      <p className=\"App-intro\">Sharing a few of our favourite movies</p>\n      <div className=\"movies\">\n        {loading && !errorMessage ? (\n         <span>loading...</span>\n         ) : errorMessage ? (\n          <div className=\"errorMessage\">{errorMessage}</div>\n        ) : (\n          movies.map((movie: MovieData, index) => (\n            <Movie key={`${index}-${movie.Title}`} movie={movie} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}